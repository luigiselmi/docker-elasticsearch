# This docker-compose file can be used to deploy a cluster of three 
# Elasticsearch nodes on a Docker swarm.
#
# $ docker stack deploy -c docker-compose-es-cluster.yml es-stack
#
# Before running the server the max map count variable must be set
# to a value higher than the default one. Check the value on each 
# machine by executing the command
#
# $ sysctl vm.max_map_count
#
# If the value is 65537 set it to at least 262144 by executing the 
# command
#
# $ sudo sysctl -w vm.max_map_count=262144
#
version: '3.2'
services:
  es01:
    image: lgslm/elasticsearch:v1.0.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - network.publish_host=es01
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - kafka-clients-net
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - network.publish_host=es02
    networks:
      - kafka-clients-net
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - network.publish_host=es03
    networks:
      - kafka-clients-net
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    depends_on:
      - es01
    ports:
      - "5601:5601"
    networks:
      - kafka-clients-net 
networks:
  kafka-clients-net:
    external: true
